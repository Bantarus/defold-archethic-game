local druid = require("druid.druid")
local navigation_menu = require("scripts.components.ui.ui_navigation_menu")
local game_archethic = require("modules.networking.game_archethic")
local local_storage = require("modules.storage.local_storage")
local game_server_state = require("scripts.components.ui.ui_game_server_state")

local function on_click_join(self,args,button)
	print("Join Button was clicked...")

	local encryption_data = local_storage.get_encryption_data()

	game_archethic.send_transfert_transaction(encryption_data, "add_player", {})

	-- play adding player animation popup while player info still not onchain

	
	

end

local function play_adding_player_animation_popup()


end


function init(self)

	print("Init play scene")

	msg.post(".", "acquire_input_focus")
	
	-- init druid 

	self.druid = druid.new(self)

	window.set_listener(function(_, event)
		druid.on_window_callback(event)
	end)

	self.navigation_menu = self.druid:new(navigation_menu,"navigation_menu", gui.get_tree(gui.get_node("navigation_menu/root")))

	-- block menu button from current scene
	self.druid:new_blocker(gui.get_node("navigation_menu/button_play"))
	
	self.game_server_state = self.druid:new(game_server_state,"game_server_state",  gui.get_tree(gui.get_node("game_server_state/root")))
	
	-- check if player has already join the battlechain 
	-- by looking for player info on chain
	-- if not render the join button

	self.button = self.druid:new_button("button_join", on_click_join)
	
	

	
end

function final(self)
	-- Cleanup the Druid instances
	if self.druid then
		self.druid:final()
	end
end

function update(self, dt)
	if self.druid then
		self.druid:update(dt)
	end


	
end

function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
	return self.druid and self.druid:on_input(action_id, action)
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end