local druid = require("druid.druid")
local monarch = require("monarch.monarch")




function init(self)

	print("Init pop play scene")

	msg.post(".", "acquire_input_focus")

	

	local fight_data = monarch.data(hash("popup_play_confirm_fight"))


	-- init druid 

	self.druid = druid.new(self)


	self.button_cancel = self.druid:new_button("button_cancel")
	self.text_button_cancel = self.druid:new_text("text_button_cancel", "CANCEL")

	self.button_confirm = self.druid:new_button("button_confirm")
	self.text_button_confirm = self.druid:new_text("text_button_confirm", "FIGHT NOW !")
	
	-- start decrementing counter at 10

	self.confirmation_counter = 10
	self.is_waiting_fight_confirmation = true
	
	self.text_progress = self.druid:new_text("text_progress", "Fight request will be sent in ... " ..self.confirmation_counter )

	self.tick_counter = 0


end

function final(self)
	-- Cleanup the Druid instances
	if self.druid then
		self.druid:final()
	end
end

function update(self, dt)
	if self.druid then
		self.druid:update(dt)
	end
end

function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)

	
	self.tick_delta = self.tick_delta + dt

	if self.is_waiting_fight_confirmation and self.tick_delta >= 1.0 then
		self.confirmation_counter = self.confirmation_counter - 1
		gui.set_text(self.text_progress.node,"Fight request will be sent in ... " .. self.confirmation_counter)

		if self.confirmation_counter == 0 then

			self.is_waiting_fight_confirmation = false
		end
		
		self.tick_delta = 0
		
		
	end
	

	if message_id == hash("battle_ready") then
		



	end
end

function on_input(self, action_id, action)
	return self.druid and self.druid:on_input(action_id, action)

end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end